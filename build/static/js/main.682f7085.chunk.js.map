{"version":3,"sources":["services/persons.js","Notification.js","SearchFilter.js","PersonForm.js","Person.js","App.js","index.js"],"names":["baseUrl","req","axios","get","console","log","then","res","data","newObject","post","object_id","put","delete","Notification","notificationMessage","notificationStyle","color","fontStyle","fontSize","border","style","message","SearchFilter","handleSearch","searchedName","value","onChange","PersonForm","handleInputs","addPerson","newPerson","onSubmit","name","number","type","Person","person","deletePerson","onClick","App","useState","persons","setPersons","setNewPerson","setSearchedName","setNotificationMessage","useEffect","personService","initialPersons","showMessage","setTimeout","e","target","preventDefault","personFounded","find","window","confirm","id","returnedPerson","map","catch","error","filter","concat","length","toLowerCase","includes","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.682f7085.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseUrl = \"/api/persons\";\n// const baseUrl = \"http://localhost:3001/persons\";\n\nconst getAll = () => {\n  const req = axios.get(baseUrl);\n  console.log(\"frontend\");\n  return req.then(res => res.data);\n};\n\nconst create = newObject => {\n  console.log(\"frontend\");\n  const req = axios.post(baseUrl, newObject);\n  return req.then(res => res.data);\n};\n\nconst update = (object_id, newObject) => {\n  const req = axios.put(`${baseUrl}/${object_id}`, newObject);\n  return req.then(res => res.data);\n};\n\nconst destroy = object_id => {\n  const req = axios.delete(`${baseUrl}/${object_id}`);\n  return req.then(res => res.data);\n};\n\nexport default { getAll, create, update, destroy };\n","import React from \"react\";\n\nconst Notification = ({ notificationMessage }) => {\n  const notificationStyle = {\n    color: notificationMessage.color,\n    fontStyle: \"italic\",\n    fontSize: \"16\",\n    border: `3px solid ${notificationMessage.color}`,\n  };\n  return (\n    <div style={notificationStyle}>\n      <p>{notificationMessage.message}</p>\n    </div>\n  );\n};\n\nexport default Notification;\n","import React from \"react\";\n\nconst SearchFilter = ({ handleSearch, searchedName }) => {\n  return (\n    <div>\n      <input value={searchedName} onChange={handleSearch} />\n    </div>\n  );\n};\n\nexport default SearchFilter;\n","import React from \"react\";\n\nconst PersonForm = ({ handleInputs, addPerson, newPerson }) => {\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        <label>Name:</label>\n        <br />\n        <input value={newPerson.name} onChange={handleInputs} name=\"name\" />\n      </div>\n      <div>\n        <label>Number:</label>\n        <br />\n        <input value={newPerson.number} onChange={handleInputs} name=\"number\" />\n      </div>\n      <div>\n        <button type=\"submit\">Add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Person = ({ person: { name, number }, deletePerson }) => {\n  return (\n    <div>\n      <p>{name}</p>\n      <p>{number}</p>{\" \"}\n      <p>\n        <button onClick={deletePerson}>delete</button>\n      </p>\n    </div>\n  );\n};\n\nexport default Person;\n","import React, { useState, useEffect } from \"react\";\nimport personService from \"./services/persons\";\nimport Notification from \"./Notification\";\nimport SearchFilter from \"./SearchFilter\";\nimport PersonForm from \"./PersonForm\";\nimport Person from \"./Person\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newPerson, setNewPerson] = useState({ name: \"\", number: \"\" });\n  const [searchedName, setSearchedName] = useState(\"\");\n  const [notificationMessage, setNotificationMessage] = useState({ color: \"\", message: \"\" });\n\n  useEffect(() => {\n    personService.getAll().then(initialPersons => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const handleInputs = e => {\n    setNewPerson({ ...newPerson, [e.target.name]: e.target.value });\n  };\n\n  const showMessage = (color, message) => {\n    setNotificationMessage({ color, message });\n    setTimeout(() => {\n      setNotificationMessage({ color: \"\", message: \"\" });\n    }, 5000);\n  };\n\n  const addPerson = e => {\n    e.preventDefault();\n    const personFounded = persons.find(person => person.name === newPerson.name);\n    if (newPerson.name === \"\") {\n      showMessage(\"red\", \"Esse nome não pode ser branco.\");\n    } else if (newPerson.number === \"\") {\n    } else if (personFounded) {\n      if (window.confirm(`${newPerson.name} já está na lista. Deseja atualizar o número?`)) {\n        personService\n          .update(personFounded.id, newPerson)\n          .then(returnedPerson => {\n            setPersons(\n              persons.map(person => (person.name !== newPerson.name ? person : returnedPerson))\n            );\n          })\n          .catch(error => {\n            showMessage(\"red\", \"Esse usuário já foi excluído\");\n            setPersons(persons.filter(person => person.id !== personFounded.id));\n          });\n      }\n      setNewPerson({ name: \"\", number: \"\" });\n    } else {\n      personService\n        .create(newPerson)\n        .then(returnedPerson => setPersons(persons.concat(returnedPerson)));\n      showMessage(\"green\", `${newPerson.name} adicionado aos contatos.`);\n      setNewPerson({ name: \"\", number: \"\" });\n    }\n  };\n\n  const deletePersonOf = id => {\n    if (window.confirm(\"Tem certeza que deseja deletar esse contato?\")) {\n      personService.destroy(id).then(res => setPersons(persons.filter(person => person.id !== id)));\n    }\n  };\n\n  const handleSearch = e => {\n    setSearchedName(e.target.value);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook </h2>\n      {notificationMessage.message !== \"\" && (\n        <Notification notificationMessage={notificationMessage} />\n      )}\n\n      <div>\n        <h3>Search </h3>\n        <SearchFilter handleSearch={handleSearch} searchedName={searchedName} />\n      </div>\n      <div>\n        <h3>Add new contact </h3>\n        <PersonForm handleInputs={handleInputs} addPerson={addPerson} newPerson={newPerson} />\n      </div>\n      <div>\n        <h3>Contacts </h3>\n        <div>\n          {persons.length > 0 &&\n            persons.map(person =>\n              person.name.toLowerCase().includes(searchedName.toLowerCase()) ? (\n                <Person\n                  key={person.id}\n                  person={person}\n                  deletePerson={() => deletePersonOf(person.id)}\n                />\n              ) : (\n                \"\"\n              )\n            )}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}